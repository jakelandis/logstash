[[keystore]]
=== Secrets keystore

When you configure Logstash, you might need to specify sensitive settings or configuration,
such as passwords. Relying on the file system to protect these values is not
sufficient. Logstash provides a keystore for storing secret values to use
for configuration settings.

Unlike the Elasticsearch keystore, the Logstash keystore does not store
actual configuration settings. Instead, you add a key and secret value to the
keystore, and then use the key in place of the secret value when you configure
sensitive settings.

The syntax for referencing keys is identical to the syntax for <<environment-variables, environment variables>>:

`${KEY}`

Where KEY is the name of the key.

For example, imagine that the keystore contains a key called `ES_PWD` with the
value `yourelasticsearchpassword`:

* In the configuration file, use `output{  elasticsearch {  ...  password => "${ES_PWD}" }}}`
* In `logstash.yml`, use: `xpack.management.elasticsearch.password: ${ES_PWD}`

NOTE: Referencing keystore data from pipelines.yml or the command line (`-e`) is not currently supported.

When Logstash parses the settings (`logstash.yml`) or configuration (`/etc/logstash/conf.d/*.conf`), it resolves keys from the keystore before resolving
environment variables.

// TODO: write keystore-command section in the command reference
// To create and manage keys, use the `keystore` command. See the
// <<keystore-command,command reference>> for the full command syntax, including
// optional flags.

[float]
[[keystore-password]]
=== Keystore password

Access to the Logstash keystore can be protected by a password. The keystore password must be stored in the environment variable `LOGSTASH_KEYSTORE_PASS`. If the Logstash keystore is created with this environment variable set, then the environment variable needs to be accessible to the running instance of Logstash. Also any keystore commands (add, list, remove, etc.) require the environment entry defined for the user performing the commands.

Using the keystore password is optional, and if not set the data is still encrypted. However, it is highly recommended to configure the keystore password and ensure restrictive
permissions to any files that may contain the environment variable value.

For example:
[source,sh]
--------------------------------------------------
set +o history
export LOGSTASH_KEYSTORE_PASS=mypassword
bin/logstash-keystore create
--------------------------------------------------

This setup requires that the user running Logstash have the environment variable `LOGSTASH_KEYSTORE_PASS=mypassword` defined. If it is not defined, then Logstash can not access
the the keystore.

When Logstash is run from an RPM or DEB package installation, the environment variables are sourced from `/etc/sysconfig/logstash`.

NOTE: `/etc/sysconfig/logstash` may need to be created. This file should be owned by `root` with `600` permissions. The expected format of `/etc/sysconfig/logstash` is
ENVIRONMENT_VARIABLE=VALUE, one entry per line.

When Logstash is run from a Docker, ZIP, or installed by some other means, please refer the given runtime environment (e.g. Windows, Docker, etc) for how to set the environment variable for the user that runs Logstash. Also measures should be taken to ensure that the environment variable (and thus the password) is only accessible to that user.

[float]
[[keystore-location]]
=== Keystore location

It is required that the keystore is located in Logstash's `path.settings` directory. This is the same directory that contains `logstash.yml`. When performing any operation against the keystore it is recommended to set the `path.settings` for the keystore command.  For example, creating a keystore from a RPM/DEB installation

["source","sh",subs="attributes"]
----------------------------------------------------------------
set +o history
export LOGSTASH_KEYSTORE_PASS=mypassword
sudo -E /usr/share/logstash/bin/logstash-keystore --path.settings /etc/logstash create
----------------------------------------------------------------

Setting the `--path.settings` is necessary here since RPM/DEB defaults to `/etc/logstash`. If `path.settings` is not set, then it will default to `./config`. If you forget to set `path.settings` while working with the keystore, you can simply move the file, `logstash.keystore`, to the correct directory. The correct directory will always be the same directory that contains `logstash.yml`

NOTE: RPM/DEB based install defaults `path.settings` to `/etc/logstash`, ZIP defaults to `./config`, and Docker defaults to `/usr/share/logstash/config`.

[float]
[[creating-keystore]]
=== Create a keystore

To create a secrets keystore, use the `create`:

["source","sh",subs="attributes"]
----------------------------------------------------------------
bin/logstash-keystore create
----------------------------------------------------------------

Creates the keystore in the directory defined by the `path.settings` configuration setting.

NOTE: It is recommended to create the keystore with a <<keystore-password,password set>>.

[float]
[[add-keys-to-keystore]]
=== Add keys

To store sensitive values, such as authentication credentials for Elasticsearch,
use the `add` command:

["source","sh",subs="attributes"]
----------------------------------------------------------------
bin/logstash-keystore add ES_PWD
----------------------------------------------------------------

When prompted, enter a value for the key.

NOTE: If the <<keystore-password,keystore password>> is set, then the environment variable `LOGSTASH_KEYSTORE_PASS` must be correctly set for the user issuing this command.

[float]
[[list-settings]]
=== List keys

To list the keys defined in the keystore, use:

["source","sh",subs="attributes"]
----------------------------------------------------------------
bin/logstash-keystore list
----------------------------------------------------------------

NOTE: If the <<keystore-password,keystore password>> is set, then the environment variable `LOGSTASH_KEYSTORE_PASS` must be correctly set for the user issuing this command.

[float]
[[remove-settings]]
=== Remove keys

To remove a key from the keystore, use:

["source","sh",subs="attributes"]
----------------------------------------------------------------
bin/logstash-keystore remove ES_PWD
----------------------------------------------------------------

NOTE: If the <<keystore-password,keystore password>> is set, then the environment variable `LOGSTASH_KEYSTORE_PASS` must be correctly set for the user issuing this command.